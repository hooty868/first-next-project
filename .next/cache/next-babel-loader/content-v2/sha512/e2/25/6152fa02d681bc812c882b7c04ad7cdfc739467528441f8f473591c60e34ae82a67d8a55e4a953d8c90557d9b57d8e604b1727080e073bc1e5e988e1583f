{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chusteve/Desktop/project/Next_project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: \"1\"\n      }\n    }, {\n      params: {\n        meetupId: \"2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: data.map(item => {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          _id: item._id.toString(),\n          id: item._id.toString()\n        });\n      })\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["/Users/chusteve/Desktop/project/Next_project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetUpDetail","MongoClient","ObjectId","MeetUpDetails","props","image","title","address","description","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","meetUpId","client","connect","db","meetupsCollection","collection","data","findOne","_id","close","meetupData","map","item","toString","id"],"mappings":";;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAV,KAAD,EAAgC;AAAED,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAV,KAAhC;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACA,QAAMI,MAAM,GAAG,MAAMhB,WAAW,CAACiB,OAAZ,CACnB,6FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,IAAI,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAEtB,QAAQ,CAACc,QAAD;AAAf,GAA1B,CAAnB;AACAC,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLsB,MAAAA,UAAU,EAAEJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAU;AAC7B,+CAAYA,IAAZ;AAAkBJ,UAAAA,GAAG,EAAEI,IAAI,CAACJ,GAAL,CAASK,QAAT,EAAvB;AAA4CC,UAAAA,EAAE,EAAEF,IAAI,CAACJ,GAAL,CAASK,QAAT;AAAhD;AACD,OAFW;AADP;AADF,GAAP;AAOD;AAED,eAAe1B,aAAf","sourcesContent":["import MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nconst MeetUpDetails = (props) => {\n  return (\n    <MeetUpDetail\n      image={props.image}\n      title={props.title}\n      address={props.address}\n      description={props.description}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  return {\n    fallback: false,\n    paths: [{ params: { meetupId: \"1\" } }, { params: { meetupId: \"2\" } }],\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.findOne({ _id: ObjectId(meetUpId) });\n  client.close();\n  return {\n    props: {\n      meetupData: data.map((item) => {\n        return { ...item, _id: item._id.toString(), id: item._id.toString() };\n      }),\n    },\n  };\n}\n\nexport default MeetUpDetails;\n"]},"metadata":{},"sourceType":"module"}