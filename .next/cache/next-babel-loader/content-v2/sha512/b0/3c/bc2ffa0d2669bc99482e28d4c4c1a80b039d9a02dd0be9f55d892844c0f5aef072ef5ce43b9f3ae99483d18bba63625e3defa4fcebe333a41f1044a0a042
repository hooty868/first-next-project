{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chusteve/Desktop/project/Next_project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetUpDetails = ({\n  meetupData = {\n    _id: \"61b0e002066ad37feed85fc1\",\n    title: \"桃園之旅\",\n    image: \"https://images.unsplash.com/photo-1638569763060-32073547bbe5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80\",\n    address: \"台北市中山區\",\n    description: \"到底有沒有成功\",\n    id: \"61b0e002066ad37feed85fc1\"\n  }\n}) => {\n  console.log(meetupData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      image: meetupData.image,\n      title: meetupData.title,\n      address: meetupData.address,\n      description: meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: true,\n    paths: data.map(meet => ({\n      params: {\n        meetupId: meet._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: _objectSpread(_objectSpread({}, data), {}, {\n        _id: data._id.toString(),\n        id: data._id.toString()\n      })\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["/Users/chusteve/Desktop/project/Next_project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetUpDetail","MongoClient","ObjectId","Head","MeetUpDetails","meetupData","_id","title","image","address","description","id","console","log","getStaticPaths","client","connect","db","meetupsCollection","collection","data","find","toArray","close","fallback","paths","map","meet","params","meetupId","toString","getStaticProps","context","meetUpId","findOne","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,UAAU,GAAG;AACXC,IAAAA,GAAG,EAAE,0BADM;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,KAAK,EACH,gKAJS;AAKXC,IAAAA,OAAO,EAAE,QALE;AAMXC,IAAAA,WAAW,EAAE,SANF;AAOXC,IAAAA,EAAE,EAAE;AAPO;AADQ,CAAD,KAUhB;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,UAAU,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,UAAU,CAACK;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEL,UAAU,CAACG,KADpB;AAEE,MAAA,KAAK,EAAEH,UAAU,CAACE,KAFpB;AAGE,MAAA,OAAO,EAAEF,UAAU,CAACI,OAHtB;AAIE,MAAA,WAAW,EAAEJ,UAAU,CAACK;AAJ1B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAcD,CA1BD;;AA4BA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,6FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,IAAI,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEf,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCgB,OAAvC,EAAnB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEL,IAAI,CAACM,GAAL,CAAUC,IAAD,KAAW;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,IAAI,CAACrB,GAAL,CAASwB,QAAT;AAAZ;AAAV,KAAX,CAAT;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,6FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,IAAI,GAAG,MAAMF,iBAAiB,CAACgB,OAAlB,CAA0B;AAAE5B,IAAAA,GAAG,EAAEJ,QAAQ,CAAC+B,QAAD;AAAf,GAA1B,CAAnB;AAEAlB,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLY,IAAAA,KAAK,EAAE;AACL9B,MAAAA,UAAU,kCACLe,IADK;AAERd,QAAAA,GAAG,EAAEc,IAAI,CAACd,GAAL,CAASwB,QAAT,EAFG;AAGRnB,QAAAA,EAAE,EAAES,IAAI,CAACd,GAAL,CAASwB,QAAT;AAHI;AADL;AADF,GAAP;AASD;AAED,eAAe1B,aAAf","sourcesContent":["import MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetUpDetails = ({\n  meetupData = {\n    _id: \"61b0e002066ad37feed85fc1\",\n    title: \"桃園之旅\",\n    image:\n      \"https://images.unsplash.com/photo-1638569763060-32073547bbe5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80\",\n    address: \"台北市中山區\",\n    description: \"到底有沒有成功\",\n    id: \"61b0e002066ad37feed85fc1\",\n  },\n}) => {\n  console.log(meetupData);\n  return (\n    <>\n      <Head>\n        <title>{meetupData.title}</title>\n        <meta name=\"description\" content={meetupData.description}></meta>\n      </Head>\n      <MeetUpDetail\n        image={meetupData.image}\n        title={meetupData.title}\n        address={meetupData.address}\n        description={meetupData.description}\n      />\n    </>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n  return {\n    fallback: true,\n    paths: data.map((meet) => ({ params: { meetupId: meet._id.toString() } })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.findOne({ _id: ObjectId(meetUpId) });\n\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        ...data,\n        _id: data._id.toString(),\n        id: data._id.toString(),\n      },\n    },\n  };\n}\n\nexport default MeetUpDetails;\n"]},"metadata":{},"sourceType":"module"}