{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetUpDetails = ({\n  meetupData = {\n    _id: \"61b0e002066ad37feed85fc1\",\n    title: \"桃園之旅\",\n    image: \"https://images.unsplash.com/photo-1638569763060-32073547bbe5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80\",\n    address: \"台北市中山區\",\n    description: \"到底有沒有成功\",\n    id: \"61b0e002066ad37feed85fc1\"\n  }\n}) => {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: meetupData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: meetupData.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetUpDetail, {\n      image: meetupData.image,\n      title: meetupData.title,\n      address: meetupData.address,\n      description: meetupData.description\n    })]\n  });\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: true,\n    paths: data.map(meet => ({\n      params: {\n        meetupId: meet._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: _objectSpread(_objectSpread({}, data), {}, {\n        _id: data._id.toString(),\n        id: data._id.toString()\n      })\n    }\n  };\n}\nexport default MeetUpDetails;","map":null,"metadata":{},"sourceType":"module"}