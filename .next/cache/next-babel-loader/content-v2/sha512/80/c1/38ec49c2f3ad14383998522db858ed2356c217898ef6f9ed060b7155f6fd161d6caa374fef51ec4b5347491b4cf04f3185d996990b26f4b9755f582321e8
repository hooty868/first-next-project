{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chusteve/Desktop/project/Next_project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetUpDetails = ({\n  meetupData\n}) => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: meetupData.image,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(456, data.map(meet => ({\n    params: {\n      meetupId: meet._id.toString()\n    }\n  })));\n  client.close();\n  return {\n    fallback: false,\n    paths: data.map(meet => ({\n      params: {\n        meetupId: meet._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  console.log(123, _objectSpread(_objectSpread({}, data), {}, {\n    _id: data._id.toString(),\n    id: data._id.toString()\n  }));\n  client.close();\n  return {\n    props: {\n      meetupData: _objectSpread(_objectSpread({}, data), {}, {\n        _id: data._id.toString(),\n        id: data._id.toString()\n      })\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["/Users/chusteve/Desktop/project/Next_project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetUpDetail","MongoClient","ObjectId","MeetUpDetails","meetupData","console","log","props","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","data","find","_id","toArray","map","meet","params","meetupId","toString","close","fallback","paths","getStaticProps","context","meetUpId","findOne","id"],"mappings":";;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEH,UAAU,CAACI,KADpB;AAEE,IAAA,KAAK,EAAEJ,UAAU,CAACK,KAFpB;AAGE,IAAA,OAAO,EAAEL,UAAU,CAACM,OAHtB;AAIE,IAAA,WAAW,EAAEN,UAAU,CAACO;AAJ1B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;AAYA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,6FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,IAAI,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAnB;AACAhB,EAAAA,OAAO,CAACC,GAAR,CACE,GADF,EAEEY,IAAI,CAACI,GAAL,CAAUC,IAAD,KAAW;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEF,IAAI,CAACH,GAAL,CAASM,QAAT;AAAZ;AAAV,GAAX,CAAT,CAFF;AAIAb,EAAAA,MAAM,CAACc,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEX,IAAI,CAACI,GAAL,CAAUC,IAAD,KAAW;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,IAAI,CAACH,GAAL,CAASM,QAAT;AAAZ;AAAV,KAAX,CAAT;AAFF,GAAP;AAID;AAED,OAAO,eAAeI,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACP,MAAR,CAAeC,QAAhC;AACA,QAAMZ,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,6FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,IAAI,GAAG,MAAMF,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAElB,QAAQ,CAAC8B,QAAD;AAAf,GAA1B,CAAnB;AACA3B,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,kCACKY,IADL;AAEEE,IAAAA,GAAG,EAAEF,IAAI,CAACE,GAAL,CAASM,QAAT,EAFP;AAGEQ,IAAAA,EAAE,EAAEhB,IAAI,CAACE,GAAL,CAASM,QAAT;AAHN;AAKAb,EAAAA,MAAM,CAACc,KAAP;AACA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,kCACLc,IADK;AAERE,QAAAA,GAAG,EAAEF,IAAI,CAACE,GAAL,CAASM,QAAT,EAFG;AAGRQ,QAAAA,EAAE,EAAEhB,IAAI,CAACE,GAAL,CAASM,QAAT;AAHI;AADL;AADF,GAAP;AASD;AAED,eAAevB,aAAf","sourcesContent":["import MeetUpDetail from \"../../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nconst MeetUpDetails = ({ meetupData }) => {\n  console.log(props);\n  return (\n    <MeetUpDetail\n      image={meetupData.image}\n      title={meetupData.title}\n      address={meetupData.address}\n      description={meetupData.description}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  console.log(\n    456,\n    data.map((meet) => ({ params: { meetupId: meet._id.toString() } }))\n  );\n  client.close();\n  return {\n    fallback: false,\n    paths: data.map((meet) => ({ params: { meetupId: meet._id.toString() } })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://root:Ohp554tts@cluster0.y8lxx.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const data = await meetupsCollection.findOne({ _id: ObjectId(meetUpId) });\n  console.log(123, {\n    ...data,\n    _id: data._id.toString(),\n    id: data._id.toString(),\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        ...data,\n        _id: data._id.toString(),\n        id: data._id.toString(),\n      },\n    },\n  };\n}\n\nexport default MeetUpDetails;\n"]},"metadata":{},"sourceType":"module"}